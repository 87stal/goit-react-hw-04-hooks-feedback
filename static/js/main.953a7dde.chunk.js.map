{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Sections.module.css","components/Notification/Notification.module.css","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","countPositiveFeedbackPercentage","countTotalFeedback","className","styles","fieldStatistic","FeedbackOptions","onLeaveFeedback","type","button","onClick","Sections","title","children","section","Notification","message","App","useState","setGood","setNeutral","setBad","Section","prevValue","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4JACAA,EAAOC,QAAU,CAAC,OAAS,kC,mBCA3BD,EAAOC,QAAU,CAAC,QAAU,4B,gBCA5BD,EAAOC,QAAU,CAAC,QAAU,gC,8JC4BbC,EAzBI,SAAC,GAAD,IACjBC,EADiB,EACjBA,KACAC,EAFiB,EAEjBA,QACAC,EAHiB,EAGjBA,IACAC,EAJiB,EAIjBA,gCACAC,EALiB,EAKjBA,mBALiB,OAOjB,oCACE,uBAAGC,UAAWC,IAAOC,gBAArB,SAA4CP,GAC5C,uBAAGK,UAAWC,IAAOC,gBAArB,YAA+CN,GAC/C,uBAAGI,UAAWC,IAAOC,gBAArB,QAA2CL,GAC3C,uBAAGG,UAAWC,IAAOC,gBAArB,UAA6CH,GAC7C,uBAAGC,UAAWC,IAAOC,gBAArB,qBAEGJ,EAFH,O,gBCgBWK,EA5BS,SAAC,GAAD,IAAGC,EAAH,EAAGA,gBAAH,OACtB,oCACE,4BACEC,KAAK,SACLL,UAAWC,IAAOK,OAClBC,QAAS,kBAAMH,EAAgB,UAHjC,QAOA,4BACEC,KAAK,SACLL,UAAWC,IAAOK,OAClBC,QAAS,kBAAMH,EAAgB,aAHjC,WAOA,4BACEC,KAAK,SACLL,UAAWC,IAAOK,OAClBC,QAAS,kBAAMH,EAAgB,SAHjC,S,gBCJWI,EAZE,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,SAAT,OACf,6BAASV,UAAWC,IAAOU,SACzB,wBAAIX,UAAU,SAASS,GACtBC,I,gBCKUE,EARM,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAAF,OACrB,uBAAGb,UAAWC,IAAOY,SAAUA,ICsDhBC,MArDf,WAAgB,IAAD,EACWC,mBAAS,GADpB,mBACNpB,EADM,KACAqB,EADA,OAEiBD,mBAAS,GAF1B,mBAENnB,EAFM,KAEGqB,EAFH,OAGSF,mBAAS,GAHlB,mBAGNlB,EAHM,KAGDqB,EAHC,KAwBPnB,EAAqB,WACzB,OAAOJ,EAAOC,EAAUC,GAM1B,OACE,oCACE,kBAACsB,EAAD,CAASV,MAAO,yBACd,kBAAC,EAAD,CAAiBL,gBA7BO,SAAAC,GAC5B,OAAQA,GACN,IAAK,OACHW,GAAQ,SAAAI,GAAS,OAAIA,EAAY,KACjC,MAEF,IAAK,UACHH,GAAW,SAAAG,GAAS,OAAIA,EAAY,KACpC,MAEF,IAAK,MACHF,GAAO,SAAAE,GAAS,OAAIA,EAAY,KAChC,MAEF,QACE,YAgBF,kBAACD,EAAD,CAASV,MAAO,cACbV,IAAuB,EACtB,kBAAC,EAAD,CACEJ,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLE,mBAAoBA,IACpBD,gCAfDuB,KAAKC,MAAO3B,EAAOI,IAAwB,OAkB5C,kBAAC,EAAD,CAAcc,QAAQ,yBC9ChCU,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.953a7dde.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__38Z-0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Sections_section__3GYHv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__3WPsk\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Statistic.module.css';\r\n\r\nconst Statistics = ({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  countPositiveFeedbackPercentage,\r\n  countTotalFeedback,\r\n}) => (\r\n  <>\r\n    <p className={styles.fieldStatistic}>Good: {good}</p>\r\n    <p className={styles.fieldStatistic}>Neutral: {neutral}</p>\r\n    <p className={styles.fieldStatistic}>Bad: {bad}</p>\r\n    <p className={styles.fieldStatistic}>Total: {countTotalFeedback}</p>\r\n    <p className={styles.fieldStatistic}>\r\n      Positive feedback:\r\n      {countPositiveFeedbackPercentage}%\r\n    </p>\r\n  </>\r\n);\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  countPositiveFeedbackPercentage: PropTypes.number.isRequired,\r\n  countTotalFeedback: PropTypes.number.isRequired,\r\n};\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ onLeaveFeedback }) => (\r\n  <>\r\n    <button\r\n      type=\"submit\"\r\n      className={styles.button}\r\n      onClick={() => onLeaveFeedback('good')}\r\n    >\r\n      Good\r\n    </button>\r\n    <button\r\n      type=\"submit\"\r\n      className={styles.button}\r\n      onClick={() => onLeaveFeedback('neutral')}\r\n    >\r\n      Neutral\r\n    </button>\r\n    <button\r\n      type=\"submit\"\r\n      className={styles.button}\r\n      onClick={() => onLeaveFeedback('bad')}\r\n    >\r\n      Bad\r\n    </button>\r\n  </>\r\n);\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func,\r\n};\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Sections.module.css'\r\n\r\nconst Sections = ({title, children}) => (\r\n  <section className={styles.section}>\r\n    <h2 className=\"Title\">{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSections.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children:  PropTypes.element,\r\n};\r\n\r\nexport default Sections;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Notification.module.css'\r\n\r\nconst Notification = ({message}) => (\r\n<p className={styles.message}>{message}</p>\r\n);\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Notification;","import React, { useState } from 'react';\nimport Statistics from './components/Statistics/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Section from './components/Section/Section';\nimport Notification from './components/Notification/Notification';\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handlerUpdateFeedback = type => {\n    switch (type) {\n      case 'good':\n        setGood(prevValue => prevValue + 1);\n        break;\n\n      case 'neutral':\n        setNeutral(prevValue => prevValue + 1);\n        break;\n\n      case 'bad':\n        setBad(prevValue => prevValue + 1);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n  const countPositiveFeedbackPercentage = () => {\n    return Math.round((good / countTotalFeedback()) * 100);\n  };\n\n  return (\n    <>\n      <Section title={'Please leave feedback'}>\n        <FeedbackOptions onLeaveFeedback={handlerUpdateFeedback} />\n      </Section>\n      <Section title={'Statistics'}>\n        {countTotalFeedback() > 0 ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            countTotalFeedback={countTotalFeedback()}\n            countPositiveFeedbackPercentage={countPositiveFeedbackPercentage()}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}