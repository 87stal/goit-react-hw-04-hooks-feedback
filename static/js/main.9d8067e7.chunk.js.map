{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Sections.module.css","components/Notification/Notification.module.css","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","components/App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","positiveFeedbackPercentage","totalFeedback","className","styles","fieldStatistic","FeedbackOptions","onLeaveFeedback","options","map","feedbackType","type","key","button","onClick","Sections","title","children","section","Notification","message","App","useState","setGood","setNeutral","setBad","countTotalFeedback","Section","prevValue","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+JACAA,EAAOC,QAAU,CAAC,OAAS,kC,gBCA3BD,EAAOC,QAAU,CAAC,QAAU,4B,gBCA5BD,EAAOC,QAAU,CAAC,QAAU,gC,8JC4BbC,EAzBI,SAAC,GAAD,IACjBC,EADiB,EACjBA,KACAC,EAFiB,EAEjBA,QACAC,EAHiB,EAGjBA,IACAC,EAJiB,EAIjBA,2BACAC,EALiB,EAKjBA,cALiB,OAOjB,oCACE,uBAAGC,UAAWC,IAAOC,gBAArB,SAA4CP,GAC5C,uBAAGK,UAAWC,IAAOC,gBAArB,YAA+CN,GAC/C,uBAAGI,UAAWC,IAAOC,gBAArB,QAA2CL,GAC3C,uBAAGG,UAAWC,IAAOC,gBAArB,UAA6CH,GAC7C,uBAAGC,UAAWC,IAAOC,gBAArB,qBAEGJ,EAFH,O,gBCSWK,EArBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,gBAAiBC,EAAc,EAAdA,QAC1C,OACE,oCACGA,EAAQC,KAAI,SAAAC,GAAY,OACvB,4BACEC,KAAK,SACLC,IAAKF,EACLP,UAAWC,IAAOS,OAClBC,QAAS,kBAAMP,EAAgBG,KAE9BA,Q,gBCEIK,EAZE,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,SAAT,OACf,6BAASd,UAAWC,IAAOc,SACzB,wBAAIf,UAAU,SAASa,GACtBC,I,gBCKUE,EARM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,uBAAGjB,UAAWC,IAAOgB,SAAUA,IC2DlBC,MA1Df,WAAgB,IAAD,EACWC,mBAAS,GADpB,mBACNxB,EADM,KACAyB,EADA,OAEiBD,mBAAS,GAF1B,mBAENvB,EAFM,KAEGyB,EAFH,OAGSF,mBAAS,GAHlB,mBAGNtB,EAHM,KAGDyB,EAHC,KAwBPC,EAAqB5B,EAAOC,EAAUC,EAQ5C,OACE,oCACE,kBAAC2B,EAAD,CAASX,MAAO,yBACd,kBAAC,EAAD,CACET,gBA/BsB,SAAAI,GAC5B,OAAQA,GACN,IAAK,OACHY,GAAQ,SAAAK,GAAS,OAAIA,EAAY,KACjC,MAEF,IAAK,UACHJ,GAAW,SAAAI,GAAS,OAAIA,EAAY,KACpC,MAEF,IAAK,MACHH,GAAO,SAAAG,GAAS,OAAIA,EAAY,KAChC,MAEF,QACE,SAiBEpB,QAXQ,CAAC,OAAQ,MAAO,cAc5B,kBAACmB,EAAD,CAASX,MAAO,cACbU,EAAqB,EACpB,kBAAC,EAAD,CACE5B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLE,cAAewB,EACfzB,2BAlBD4B,KAAKC,MAAOhC,EAAO4B,EAAsB,OAsB1C,kBAAC,EAAD,CAAcN,QAAQ,yBCnDhCW,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.9d8067e7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__38Z-0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Sections_section__3GYHv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__3WPsk\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Statistic.module.css';\r\n\r\nconst Statistics = ({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  positiveFeedbackPercentage,\r\n  totalFeedback,\r\n}) => (\r\n  <>\r\n    <p className={styles.fieldStatistic}>Good: {good}</p>\r\n    <p className={styles.fieldStatistic}>Neutral: {neutral}</p>\r\n    <p className={styles.fieldStatistic}>Bad: {bad}</p>\r\n    <p className={styles.fieldStatistic}>Total: {totalFeedback}</p>\r\n    <p className={styles.fieldStatistic}>\r\n      Positive feedback:\r\n      {positiveFeedbackPercentage}%\r\n    </p>\r\n  </>\r\n);\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  positiveFeedbackPercentage: PropTypes.number.isRequired,\r\n  totalFeedback: PropTypes.number.isRequired,\r\n};\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ onLeaveFeedback, options }) => {\r\n  return (\r\n    <>\r\n      {options.map(feedbackType => (\r\n        <button\r\n          type=\"submit\"\r\n          key={feedbackType}\r\n          className={styles.button}\r\n          onClick={() => onLeaveFeedback(feedbackType)}\r\n        >\r\n          {feedbackType}\r\n        </button>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n  options:PropTypes.array.isRequired,\r\n};\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Sections.module.css'\r\n\r\nconst Sections = ({title, children}) => (\r\n  <section className={styles.section}>\r\n    <h2 className=\"Title\">{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSections.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children:  PropTypes.element,\r\n};\r\n\r\nexport default Sections;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Notification.module.css';\r\n\r\nconst Notification = ({ message }) => (\r\n  <p className={styles.message}>{message}</p>\r\n);\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState } from 'react';\nimport Statistics from './Statistics/Statistics';\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions';\nimport Section from './Section/Section';\nimport Notification from './Notification/Notification';\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handlerUpdateFeedback = type => {\n    switch (type) {\n      case 'Good':\n        setGood(prevValue => prevValue + 1);\n        break;\n\n      case 'Neutral':\n        setNeutral(prevValue => prevValue + 1);\n        break;\n\n      case 'Bad':\n        setBad(prevValue => prevValue + 1);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = good + neutral + bad;\n\n  const options = ['Good', 'Bad', 'Neutral'];\n\n  const countPositiveFeedbackPercentage = () => {\n    return Math.round((good / countTotalFeedback) * 100);\n  };\n\n  return (\n    <>\n      <Section title={'Please leave feedback'}>\n        <FeedbackOptions\n          onLeaveFeedback={handlerUpdateFeedback}\n          options={options}\n        />\n      </Section>\n      <Section title={'Statistics'}>\n        {countTotalFeedback > 0 ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            totalFeedback={countTotalFeedback}\n            positiveFeedbackPercentage={countPositiveFeedbackPercentage()}\n          />\n        ) \n       : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}